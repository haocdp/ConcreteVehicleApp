package com.hbjy;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Toast;

import com.alibaba.fastjson.JSON;
import com.hbjy.carlocation.R;
import com.hbjy.nets.NetWork;
import com.hbjy.utils.Constant;

public class LoginActivity extends Activity {
	private Button login;
	private CheckBox cb_remberpassword;
	private EditText et_pwd;
	private EditText et_username;
	private Toast mToast;
	private String url = "";

	private ProgressDialog progresscircle;// 经度框
	private String result = "";

	private long firstTime = 0;
	private Handler mHandler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case 3:
				// String result = msg.obj.toString();
				Log.d("获得的结果", result);
				if ("OK".equalsIgnoreCase(result)) {
					Log.d("Result", "登陆成功");
					SaveUserDate();
					Intent main = new Intent(LoginActivity.this,
							MainActivity.class);
					startActivity(main);
					progresscircle.dismiss();
					LoginActivity.this.finish();

				} else {
					showToast("账号或密码不正确，请重新输入");
					progresscircle.dismiss();
					showToast(result);
				}
				break;
			case 4:// 获取数据失败
				showToast("登录失败，请重试");
				progresscircle.dismiss();
				break;
			}
		};
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		// set the soft input gone when we first get in the activity
		this.getWindow().setSoftInputMode(
				WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
		findView();
		viewController();

	}

	void findView() {
		login = (Button) findViewById(R.id.login);
		cb_remberpassword = (CheckBox) findViewById(R.id.cb_remberpassword);
		et_username = (EditText) findViewById(R.id.et_inputuser);
		et_pwd = (EditText) findViewById(R.id.et_inputpasswd);
		// 初始化进度框
		progresscircle = new ProgressDialog(this);
		progresscircle.setProgressStyle(ProgressDialog.STYLE_SPINNER);
		progresscircle.setMessage("正在登录");
		progresscircle.setIndeterminate(false);
		progresscircle.setCancelable(true);
	}

	public void viewController() {
		LoadUserDate();
		login.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				progresscircle.show();
				String username = et_username.getText().toString();
				String passwd = et_pwd.getText().toString();
				if ("".equals(username)) {
					showToast("请输入账号");
					progresscircle.dismiss();
					return;
				}
				if ("".equals(passwd)) {
					showToast("请输入密码");
					progresscircle.dismiss();
					return;
				}
				validateUser(username, passwd);

			}
		});
	}

	void validateUser(String userName, String passwd) {
		url = NetWork.BASE_URL + "InfoVehicleService.svc/getLoginResult/"
				+ userName + "/" + passwd;
		new Thread(new Runnable() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {

					result = NetWork.getResponseString(url).trim();
					result = JSON.parse(result).toString();
					Log.d("Result", result);

					mHandler.sendEmptyMessage(3);
				} catch (Exception e) {
					mHandler.sendEmptyMessage(4);
				}
			}
		}).start();
	}

	@Override
	public boolean onKeyUp(int keyCode, KeyEvent event) {
		// TODO Auto-generated method stub
		if (keyCode == KeyEvent.KEYCODE_BACK) {
			long secondTime = System.currentTimeMillis();
			if ((secondTime - firstTime) > 2000) {
				Toast.makeText(LoginActivity.this, "再按一次退出程序...",
						Toast.LENGTH_SHORT).show();
				firstTime = secondTime;
				return true;
			} else {
				System.exit(0);
			}
		}
		return super.onKeyUp(keyCode, event);
	}

	private void showToast(String msg) {
		if (mToast == null) {
			mToast = Toast.makeText(this, msg, Toast.LENGTH_SHORT);
		} else {
			mToast.setText(msg);
			mToast.setDuration(Toast.LENGTH_SHORT);
		}
		mToast.show();
	}

	/**
	 * 保存用户信息
	 */
	private void SaveUserDate() {
		// 载入配置文件
		SharedPreferences sp = CarInfoApplication.mInstance
				.getSharedPreferences(Constant.FILENAME, 0);
		// 写入配置文件
		Editor spEd = sp.edit();
		if (cb_remberpassword.isChecked()) {
			spEd.putBoolean(Constant.ISSAVE, true);
			spEd.putString(Constant.USERNAME, et_username.getText().toString());
			spEd.putString(Constant.PASSWORD, et_pwd.getText().toString());
			spEd.putLong(Constant.LASTTIME, System.currentTimeMillis());
		} else {
			spEd.putBoolean(Constant.ISSAVE, false);
			spEd.putString(Constant.USERNAME, "");
			spEd.putString(Constant.PASSWORD, "");
		}
		spEd.commit();
	}

	/**
	 * 载入已记住的用户信息
	 */
	private void LoadUserDate() {
		if (CarInfoApplication.mInstance == null) {
			Log.d("初始化", "CarInfoApplication初始化失败");
			return;
		}
		Log.d("初始化", "CarInfoApplication初始化成功");
		SharedPreferences sp = CarInfoApplication.mInstance
				.getSharedPreferences(Constant.FILENAME, 0);

		// boolean flag=sp.getBoolean(Constant.ISSAVE, true);
		if (sp.getBoolean(Constant.ISSAVE, true)) {
			String username = sp.getString(Constant.USERNAME, "");
			String userpassword = sp.getString(Constant.PASSWORD, "");
			if (!("".equals(username) && "".equals(userpassword))) {
				et_username.setText(username);
				et_pwd.setText(userpassword);
				cb_remberpassword.setChecked(true);
			}
		}
	}

}
